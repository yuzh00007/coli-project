'PROJECT_ROOT=/home/neuronet_team095/coli-project'
Running 'run.sh' in conda env coli_env
Tue Mar 19 18:54:26 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 545.23.08              Driver Version: 545.23.08    CUDA Version: 12.3     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  Tesla P100-PCIE-16GB           On  | 00000000:04:00.0 Off |                    0 |
| N/A   32C    P0              25W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   1  Tesla P100-PCIE-16GB           On  | 00000000:06:00.0 Off |                    0 |
| N/A   31C    P0              26W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   2  Tesla P100-PCIE-16GB           On  | 00000000:07:00.0 Off |                    0 |
| N/A   37C    P0              27W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   3  Tesla P100-PCIE-16GB           On  | 00000000:08:00.0 Off |                    0 |
| N/A   30C    P0              27W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   4  Tesla P100-PCIE-16GB           On  | 00000000:0C:00.0 Off |                    0 |
| N/A   33C    P0              27W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   5  Tesla P100-PCIE-16GB           On  | 00000000:0D:00.0 Off |                    0 |
| N/A   32C    P0              24W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   6  Tesla P100-PCIE-16GB           On  | 00000000:0E:00.0 Off |                    0 |
| N/A   33C    P0              26W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
|   7  Tesla P100-PCIE-16GB           On  | 00000000:0F:00.0 Off |                    0 |
| N/A   34C    P0              26W / 250W |      2MiB / 16384MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|  No running processes found                                                           |
+---------------------------------------------------------------------------------------+
GPU-0833fde1
neuronet_team095-46832.0-uller.hpc.uni-saarland.de
/home/neuronet_team095/miniconda3/envs/coli_env/bin/python
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 20710
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2301
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2555
    })
})
validation results out of the box
{'eval_loss': 3.6876883506774902, 'eval_f1': 0.35994238815421015, 'eval_recall': 0.5056751467710372, 'eval_precision': 0.570346527986901, 'eval_accuracy': 0.5056751467710372, 'eval_runtime': 45.3842, 'eval_samples_per_second': 56.297, 'eval_steps_per_second': 7.051}
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 24632
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
})
validation results out of the box
{'eval_loss': 0.5859283208847046, 'eval_f1': 0.7803306384864457, 'eval_recall': 0.7866190321532965, 'eval_precision': 0.8264544814594539, 'eval_accuracy': 0.7866190321532965, 'eval_runtime': 53.9438, 'eval_samples_per_second': 57.078, 'eval_steps_per_second': 7.137}
total runtime: 139.07
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 20710
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2301
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2555
    })
})
--------------- 
 training finetuned model
{'loss': 0.8025, 'grad_norm': 2.1600193977355957, 'learning_rate': 5e-05, 'epoch': 0.19}
{'loss': 0.5211, 'grad_norm': 7.3381195068359375, 'learning_rate': 5e-05, 'epoch': 0.39}
{'loss': 0.5208, 'grad_norm': 1.347110629081726, 'learning_rate': 5e-05, 'epoch': 0.58}
{'loss': 0.4715, 'grad_norm': 0.5743190050125122, 'learning_rate': 5e-05, 'epoch': 0.77}
{'loss': 0.5258, 'grad_norm': 3.928708076477051, 'learning_rate': 5e-05, 'epoch': 0.97}
{'eval_loss': 0.7044190168380737, 'eval_f1': 0.33405790781101863, 'eval_recall': 0.500651890482399, 'eval_precision': 0.25065231544360006, 'eval_accuracy': 0.500651890482399, 'eval_runtime': 40.5228, 'eval_samples_per_second': 56.783, 'eval_steps_per_second': 7.107, 'epoch': 1.0}
{'loss': 0.6973, 'grad_norm': 1.0560379028320312, 'learning_rate': 5e-05, 'epoch': 1.16}
{'loss': 0.698, 'grad_norm': 1.004356861114502, 'learning_rate': 5e-05, 'epoch': 1.35}
{'loss': 0.6998, 'grad_norm': 0.9684355854988098, 'learning_rate': 5e-05, 'epoch': 1.54}
{'loss': 0.6968, 'grad_norm': 1.0020273923873901, 'learning_rate': 5e-05, 'epoch': 1.74}
{'loss': 0.6976, 'grad_norm': 1.340112566947937, 'learning_rate': 5e-05, 'epoch': 1.93}
{'eval_loss': 0.787007212638855, 'eval_f1': 0.33405790781101863, 'eval_recall': 0.500651890482399, 'eval_precision': 0.25065231544360006, 'eval_accuracy': 0.500651890482399, 'eval_runtime': 40.5083, 'eval_samples_per_second': 56.803, 'eval_steps_per_second': 7.11, 'epoch': 2.0}
{'loss': 0.697, 'grad_norm': 0.7872798442840576, 'learning_rate': 5e-05, 'epoch': 2.12}
{'loss': 0.695, 'grad_norm': 0.7469620704650879, 'learning_rate': 5e-05, 'epoch': 2.32}
{'loss': 0.6898, 'grad_norm': 1.4575612545013428, 'learning_rate': 5e-05, 'epoch': 2.51}
{'loss': 0.6918, 'grad_norm': 1.1402021646499634, 'learning_rate': 5e-05, 'epoch': 2.7}
{'loss': 0.6945, 'grad_norm': 0.7700638175010681, 'learning_rate': 5e-05, 'epoch': 2.9}
{'eval_loss': 0.7018821239471436, 'eval_f1': 0.33405790781101863, 'eval_recall': 0.500651890482399, 'eval_precision': 0.25065231544360006, 'eval_accuracy': 0.500651890482399, 'eval_runtime': 40.4929, 'eval_samples_per_second': 56.825, 'eval_steps_per_second': 7.112, 'epoch': 3.0}
{'train_runtime': 3703.9606, 'train_samples_per_second': 16.774, 'train_steps_per_second': 2.097, 'train_loss': 0.6545813462134723, 'epoch': 3.0}

 test results after fine-tuning
{'eval_loss': 0.7018991112709045, 'eval_f1': 0.33398585322181695, 'eval_recall': 0.500587084148728, 'eval_precision': 0.2505874288165257, 'eval_accuracy': 0.500587084148728, 'eval_runtime': 44.9492, 'eval_samples_per_second': 56.842, 'eval_steps_per_second': 7.119, 'epoch': 3.0}
--------------- 
 training parse-tree model
{'loss': 0.5621, 'grad_norm': 1.9028078317642212, 'learning_rate': 5e-05, 'epoch': 0.19}
{'loss': 0.5505, 'grad_norm': 4.717928409576416, 'learning_rate': 5e-05, 'epoch': 0.39}
{'loss': 0.6981, 'grad_norm': 2.367358446121216, 'learning_rate': 5e-05, 'epoch': 0.58}
{'loss': 0.6972, 'grad_norm': 1.280124306678772, 'learning_rate': 5e-05, 'epoch': 0.77}
{'loss': 0.6977, 'grad_norm': 3.703904867172241, 'learning_rate': 5e-05, 'epoch': 0.97}
{'eval_loss': 0.6972678303718567, 'eval_f1': 0.33405790781101863, 'eval_recall': 0.500651890482399, 'eval_precision': 0.25065231544360006, 'eval_accuracy': 0.500651890482399, 'eval_runtime': 40.4339, 'eval_samples_per_second': 56.908, 'eval_steps_per_second': 7.123, 'epoch': 1.0}
{'loss': 0.6976, 'grad_norm': 1.0693453550338745, 'learning_rate': 5e-05, 'epoch': 1.16}
{'loss': 0.6967, 'grad_norm': 1.3593897819519043, 'learning_rate': 5e-05, 'epoch': 1.35}
{'loss': 0.6978, 'grad_norm': 1.1064729690551758, 'learning_rate': 5e-05, 'epoch': 1.54}
{'loss': 0.6971, 'grad_norm': 1.7633044719696045, 'learning_rate': 5e-05, 'epoch': 1.74}
{'loss': 0.6953, 'grad_norm': 1.1549172401428223, 'learning_rate': 5e-05, 'epoch': 1.93}
{'eval_loss': 0.6930702328681946, 'eval_f1': 0.33405790781101863, 'eval_recall': 0.500651890482399, 'eval_precision': 0.25065231544360006, 'eval_accuracy': 0.500651890482399, 'eval_runtime': 40.4415, 'eval_samples_per_second': 56.897, 'eval_steps_per_second': 7.121, 'epoch': 2.0}
{'loss': 0.6962, 'grad_norm': 2.4163320064544678, 'learning_rate': 5e-05, 'epoch': 2.12}
{'loss': 0.695, 'grad_norm': 0.9110124111175537, 'learning_rate': 5e-05, 'epoch': 2.32}
{'loss': 0.6946, 'grad_norm': 2.106234073638916, 'learning_rate': 5e-05, 'epoch': 2.51}
{'loss': 0.6947, 'grad_norm': 1.2858338356018066, 'learning_rate': 5e-05, 'epoch': 2.7}
{'loss': 0.6958, 'grad_norm': 0.8311052918434143, 'learning_rate': 5e-05, 'epoch': 2.9}
{'eval_loss': 0.6931487917900085, 'eval_f1': 0.33405790781101863, 'eval_recall': 0.500651890482399, 'eval_precision': 0.25065231544360006, 'eval_accuracy': 0.500651890482399, 'eval_runtime': 40.4716, 'eval_samples_per_second': 56.855, 'eval_steps_per_second': 7.116, 'epoch': 3.0}
{'train_runtime': 3702.7899, 'train_samples_per_second': 16.779, 'train_steps_per_second': 2.098, 'train_loss': 0.6782844045439389, 'epoch': 3.0}

 test results after fine-tuning with parse trees
{'eval_loss': 0.6934601664543152, 'eval_f1': 0.33398585322181695, 'eval_recall': 0.500587084148728, 'eval_precision': 0.2505874288165257, 'eval_accuracy': 0.500587084148728, 'eval_runtime': 44.9092, 'eval_samples_per_second': 56.893, 'eval_steps_per_second': 7.125, 'epoch': 3.0}
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 24632
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
})
--------------- 
 training finetuned model
{'loss': 0.6947, 'grad_norm': 0.5586367249488831, 'learning_rate': 5e-05, 'epoch': 0.16}
{'loss': 0.6961, 'grad_norm': 0.5737765431404114, 'learning_rate': 5e-05, 'epoch': 0.32}
{'loss': 0.6953, 'grad_norm': 2.1109111309051514, 'learning_rate': 5e-05, 'epoch': 0.49}
{'loss': 0.6951, 'grad_norm': 1.3422480821609497, 'learning_rate': 5e-05, 'epoch': 0.65}
{'loss': 0.6963, 'grad_norm': 2.0018844604492188, 'learning_rate': 5e-05, 'epoch': 0.81}
{'loss': 0.6948, 'grad_norm': 1.4154274463653564, 'learning_rate': 5e-05, 'epoch': 0.97}
{'eval_loss': 0.6930538415908813, 'eval_f1': 0.34257587799208833, 'eval_recall': 0.5082819097109451, 'eval_precision': 0.2583504997394054, 'eval_accuracy': 0.5082819097109451, 'eval_runtime': 54.3346, 'eval_samples_per_second': 56.667, 'eval_steps_per_second': 7.086, 'epoch': 1.0}
{'loss': 0.6949, 'grad_norm': 1.0090700387954712, 'learning_rate': 5e-05, 'epoch': 1.14}
{'loss': 0.695, 'grad_norm': 0.9164932370185852, 'learning_rate': 5e-05, 'epoch': 1.3}
{'loss': 0.6945, 'grad_norm': 1.3942445516586304, 'learning_rate': 5e-05, 'epoch': 1.46}
{'loss': 0.6949, 'grad_norm': 0.9792056083679199, 'learning_rate': 5e-05, 'epoch': 1.62}
{'loss': 0.695, 'grad_norm': 2.37815260887146, 'learning_rate': 5e-05, 'epoch': 1.79}
{'loss': 0.6946, 'grad_norm': 0.5088567137718201, 'learning_rate': 5e-05, 'epoch': 1.95}
{'eval_loss': 0.6930124759674072, 'eval_f1': 0.34257587799208833, 'eval_recall': 0.5082819097109451, 'eval_precision': 0.2583504997394054, 'eval_accuracy': 0.5082819097109451, 'eval_runtime': 54.6983, 'eval_samples_per_second': 56.291, 'eval_steps_per_second': 7.039, 'epoch': 2.0}
{'loss': 0.6946, 'grad_norm': 1.2057831287384033, 'learning_rate': 5e-05, 'epoch': 2.11}
{'loss': 0.6949, 'grad_norm': 1.2213616371154785, 'learning_rate': 5e-05, 'epoch': 2.27}
{'loss': 0.6934, 'grad_norm': 0.7778579592704773, 'learning_rate': 5e-05, 'epoch': 2.44}
{'loss': 0.6955, 'grad_norm': 0.4335668981075287, 'learning_rate': 5e-05, 'epoch': 2.6}
{'loss': 0.6948, 'grad_norm': 0.811248779296875, 'learning_rate': 5e-05, 'epoch': 2.76}
{'loss': 0.6942, 'grad_norm': 1.5437555313110352, 'learning_rate': 5e-05, 'epoch': 2.92}
{'eval_loss': 0.6943830251693726, 'eval_f1': 0.3241720830383754, 'eval_recall': 0.4917180902890549, 'eval_precision': 0.24178668031751516, 'eval_accuracy': 0.4917180902890549, 'eval_runtime': 54.8439, 'eval_samples_per_second': 56.141, 'eval_steps_per_second': 7.02, 'epoch': 3.0}
{'train_runtime': 4434.2754, 'train_samples_per_second': 16.665, 'train_steps_per_second': 2.083, 'train_loss': 0.6948836218088598, 'epoch': 3.0}

 test results after fine-tuning
{'eval_loss': 0.6934750080108643, 'eval_f1': 0.3382164038410515, 'eval_recall': 0.5043845404352062, 'eval_precision': 0.25440376463003417, 'eval_accuracy': 0.5043845404352062, 'eval_runtime': 54.7848, 'eval_samples_per_second': 56.202, 'eval_steps_per_second': 7.027, 'epoch': 3.0}
--------------- 
 training parse-tree model
{'loss': 0.6946, 'grad_norm': 0.7069205641746521, 'learning_rate': 5e-05, 'epoch': 0.16}
{'loss': 0.695, 'grad_norm': 0.39133837819099426, 'learning_rate': 5e-05, 'epoch': 0.32}
{'loss': 0.6943, 'grad_norm': 1.581823468208313, 'learning_rate': 5e-05, 'epoch': 0.49}
{'loss': 0.6943, 'grad_norm': 1.5299519300460815, 'learning_rate': 5e-05, 'epoch': 0.65}
{'loss': 0.6957, 'grad_norm': 1.1528347730636597, 'learning_rate': 5e-05, 'epoch': 0.81}
{'loss': 0.6943, 'grad_norm': 1.529268741607666, 'learning_rate': 5e-05, 'epoch': 0.97}
{'eval_loss': 0.6931389570236206, 'eval_f1': 0.34257587799208833, 'eval_recall': 0.5082819097109451, 'eval_precision': 0.2583504997394054, 'eval_accuracy': 0.5082819097109451, 'eval_runtime': 54.7525, 'eval_samples_per_second': 56.235, 'eval_steps_per_second': 7.032, 'epoch': 1.0}
{'loss': 0.6943, 'grad_norm': 0.3991990387439728, 'learning_rate': 5e-05, 'epoch': 1.14}
{'loss': 0.6935, 'grad_norm': 0.6324871182441711, 'learning_rate': 5e-05, 'epoch': 1.3}
{'loss': 0.694, 'grad_norm': 0.5611682534217834, 'learning_rate': 5e-05, 'epoch': 1.46}
{'loss': 0.6937, 'grad_norm': 0.37634220719337463, 'learning_rate': 5e-05, 'epoch': 1.62}
{'loss': 0.6936, 'grad_norm': 1.4691239595413208, 'learning_rate': 5e-05, 'epoch': 1.79}
{'loss': 0.6942, 'grad_norm': 0.7455135583877563, 'learning_rate': 5e-05, 'epoch': 1.95}
{'eval_loss': 0.6930574178695679, 'eval_f1': 0.34257587799208833, 'eval_recall': 0.5082819097109451, 'eval_precision': 0.2583504997394054, 'eval_accuracy': 0.5082819097109451, 'eval_runtime': 54.7737, 'eval_samples_per_second': 56.213, 'eval_steps_per_second': 7.029, 'epoch': 2.0}
{'loss': 0.6943, 'grad_norm': 0.3750298321247101, 'learning_rate': 5e-05, 'epoch': 2.11}
{'loss': 0.6941, 'grad_norm': 0.850441038608551, 'learning_rate': 5e-05, 'epoch': 2.27}
{'loss': 0.6937, 'grad_norm': 0.9072176218032837, 'learning_rate': 5e-05, 'epoch': 2.44}
{'loss': 0.6941, 'grad_norm': 0.4783693552017212, 'learning_rate': 5e-05, 'epoch': 2.6}
{'loss': 0.6942, 'grad_norm': 0.7906027436256409, 'learning_rate': 5e-05, 'epoch': 2.76}
{'loss': 0.6941, 'grad_norm': 0.7313424944877625, 'learning_rate': 5e-05, 'epoch': 2.92}
{'eval_loss': 0.6950395107269287, 'eval_f1': 0.3241720830383754, 'eval_recall': 0.4917180902890549, 'eval_precision': 0.24178668031751516, 'eval_accuracy': 0.4917180902890549, 'eval_runtime': 54.7538, 'eval_samples_per_second': 56.234, 'eval_steps_per_second': 7.031, 'epoch': 3.0}
{'train_runtime': 4455.4071, 'train_samples_per_second': 16.586, 'train_steps_per_second': 2.073, 'train_loss': 0.6941991931782716, 'epoch': 3.0}

 test results after fine-tuning with parse trees
{'eval_loss': 0.6938449740409851, 'eval_f1': 0.3382164038410515, 'eval_recall': 0.5043845404352062, 'eval_precision': 0.25440376463003417, 'eval_accuracy': 0.5043845404352062, 'eval_runtime': 54.7113, 'eval_samples_per_second': 56.277, 'eval_steps_per_second': 7.037, 'epoch': 3.0}
total runtime: 16556.59
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 20710
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2301
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2555
    })
})
validation results out of the box
{'eval_loss': 3.6876883506774902, 'eval_f1': 0.35994238815421015, 'eval_recall': 0.5056751467710372, 'eval_precision': 0.570346527986901, 'eval_accuracy': 0.5056751467710372, 'eval_runtime': 46.0683, 'eval_samples_per_second': 55.461, 'eval_steps_per_second': 6.946}
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 24632
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
})
validation results out of the box
{'eval_loss': 0.5859283208847046, 'eval_f1': 0.7803306384864457, 'eval_recall': 0.7866190321532965, 'eval_precision': 0.8264544814594539, 'eval_accuracy': 0.7866190321532965, 'eval_runtime': 54.5853, 'eval_samples_per_second': 56.407, 'eval_steps_per_second': 7.053}
total runtime: 142.20
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 20710
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2301
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2555
    })
})
--------------- 
 training finetuned model
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 20710
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2301
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2555
    })
})
validation results out of the box
{'eval_loss': 3.6876883506774902, 'eval_f1': 0.35994238815421015, 'eval_recall': 0.5056751467710372, 'eval_precision': 0.570346527986901, 'eval_accuracy': 0.5056751467710372, 'eval_runtime': 45.9711, 'eval_samples_per_second': 55.578, 'eval_steps_per_second': 6.961}
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 24632
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 3079
    })
})
validation results out of the box
{'eval_loss': 0.5859283208847046, 'eval_f1': 0.7803306384864457, 'eval_recall': 0.7866190321532965, 'eval_precision': 0.8264544814594539, 'eval_accuracy': 0.7866190321532965, 'eval_runtime': 54.5202, 'eval_samples_per_second': 56.474, 'eval_steps_per_second': 7.062}
total runtime: 141.65
DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 20710
    })
    valid: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2301
    })
    test: Dataset({
        features: ['text', 'labels', 'concat', '__index_level_0__', 'input_ids', 'attention_mask'],
        num_rows: 2555
    })
})
--------------- 
 training finetuned model

